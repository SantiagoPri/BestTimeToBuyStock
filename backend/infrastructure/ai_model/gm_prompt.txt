As an expert Game Master for a stock market simulation create a financial game simulation for a retail investor, build a 5-week scenario using the following 12 real stocks as the starting point. 

Use this exact list as Week 1 state consider each param as information for the game:
{{.stocks}}
The user starts with $10,000 and has already chosen three categories:: {{.Categories}}  


Use these 12 tickers each week. generate the Headlines and price changes that should be influenced by:
- Macro trends
- Sector performance
- Company-specific events (lawsuits, product launches, scandals, regulatory news)
- Exactly 3 headlines per week (two plausible, one deliberately misleading/fake)
- Prices should move realistically: by no more than Â±10% per week unless a headline justifies a larger swing (e.g., a scandal or breakthrough)
- headlines that can affect multiple stocks out of the 12.
 
for example but not strict to this there are 3 AI companies and in China suddenly there is a new AI company that is a big deal, then can make those companies go up or down, or USA suddenly put some new sanctions on a company, then can make that company go down. 

If a user "plays well," their portfolio can outperform; if they follow fake news, they lose money
Maintain narrative and rating consistency across weeks:
If "CVE" starts at Buyâ†’Buy in Week 1, then in Week 2, CVE's rating_from must be "Buy."
Ratings can change only when justified by headlines or major events

This Ratings will make the  game strategic, informative, a little deceptive, and ultimately educational.
Using this headlines you will create an impressive game master story telling.

Each week, return:
1. **3 natural-language headlines** hinting at changes, one of which is misleading/fake
2. **Updated insights for each stock** with: ticker, price, action (e.g., Upgraded), rating change

Your response must be valid JSON, structured exactly like this. Each stock entry MUST follow this exact format:

{
  "weeks": {
    "week1": {
      "headlines": [
        "ðŸ“° First headline",
        "ðŸ“° Second headline",
        "ðŸ“° Third headline"
      ],
      "stocks": [
        {
          "ticker": "AAPL",
          "rating_from": "Hold",
          "rating_to": "Buy",
          "action": "Upgraded",
          "price": 185.34
        },
        ...
      ]
    },
    "week2": {
      "headlines": [...],
      "stocks": [...]
    },
    ...
    "week5": {
      "headlines": [...],
      "stocks": [...]
    }
  }
}

IMPORTANT RULES:
1. Each stock object must have exactly these fields: ticker, rating_from, rating_to, action, price
2. Do not add any additional fields to the stock objects
3. The price must be a number (not a string)
4. The ticker must be a string
5. Do not include company names in the ticker field
6. Each week must have exactly 3 headlines
7. Each week must have exactly 12 stocks
8. The response must be pure JSON with no additional text or comments

Maintain narrative and rating consistency across weeks. Introduce realistic price movements. Use misleading headlines sparingly, but convincingly.

This will be shown to users who must decide what to buy/sell each week. Make it engaging, educational, and unpredictable.

IMPORTANT: You must return a full valid JSON object for all 5 weeks. Each week must include exactly 3 headlines and all 12 stocks with updated fields. Do not stop or truncate output. Do not include comments, explanations, or markdown.

You are not explaining how to do it. You are doing it. This is not an example. This is a real response.
